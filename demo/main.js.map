{"version":3,"sources":["./projects/angular-bootstrap4-validate/src/lib/abstract-validate-element.directive.ts","./projects/angular-bootstrap4-validate/src/lib/validate-config.service.ts","./projects/angular-bootstrap4-validate/src/lib/template-forms/ng-form-validate.directive.ts","./projects/angular-bootstrap4-validate/src/lib/template-forms/ng-model-validate.directive.ts","./projects/angular-bootstrap4-validate/src/lib/reactive-forms/form-control-name-validate.directive.ts","./projects/angular-bootstrap4-validate/src/lib/reactive-forms/form-control-validate.directive.ts","./projects/angular-bootstrap4-validate/src/lib/validators/validators.ts","./projects/angular-bootstrap4-validate/src/lib/validators/number-validator.directive.ts","./projects/angular-bootstrap4-validate/src/lib/validators/url-validator.directive.ts","./projects/angular-bootstrap4-validate/src/lib/validators/host-validator.directive.ts","./projects/angular-bootstrap4-validate/src/lib/validators/equal-validator.directive.ts","./projects/angular-bootstrap4-validate/src/lib/validators/required-group-validator.directive.ts","./projects/angular-bootstrap4-validate/src/lib/validators/validators.module.ts","./projects/angular-bootstrap4-validate/src/lib/validate.module.ts","./projects/angular-bootstrap4-validate/src/public-api.ts","./projects/angular-bootstrap4-validate/src/angular-bootstrap4-validate.ts","./projects/angular-bootstrap4-validate-demo/src/app/app.component.ts","./projects/angular-bootstrap4-validate-demo/src/app/app.component.html","./projects/angular-bootstrap4-validate-demo/src/app/app.module.ts","./projects/angular-bootstrap4-validate-demo/src/app/section.directive.ts","./projects/angular-bootstrap4-validate-demo/src/environments/environment.ts","./projects/angular-bootstrap4-validate-demo/src/main.ts","./projects/angular-bootstrap4-validate-demo/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"names":["ng2Validators"],"mappings":"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","file":"main.js","sourcesContent":["/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {\n    AfterViewChecked,\n    ElementRef,\n    Injectable,\n    InjectionToken,\n    KeyValueDiffer, KeyValueDiffers,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {AbstractControl, AbstractControlDirective} from '@angular/forms';\nimport {NgFormValidateDirective} from './template-forms/ng-form-validate.directive';\nimport {ValidateConfigService} from './validate-config.service';\n\nexport interface IValidateAbstractControl extends AbstractControl {\n    __elementValidity?: ValidityState;\n}\n\nexport const VALIDATE_ELEMENT = new InjectionToken('Validate element');\n\n// eslint-disable-next-line @angular-eslint/use-injectable-provided-in\n@Injectable()\nexport abstract class AbstractValidateElementDirective implements AfterViewChecked, OnDestroy, OnInit {\n\n    abstract errorMessage?: Record<string, string>;\n\n    private feedbackElement?: HTMLElement;\n    private differ?: KeyValueDiffer<string, unknown>;\n    public errorMessages: string[] = [];\n\n    protected abstract ngControl: AbstractControlDirective;\n    protected abstract ngFormValidate: NgFormValidateDirective;\n    protected abstract elementRef: ElementRef<HTMLElement | HTMLInputElement>;\n    protected abstract document: Document;\n    protected abstract config: ValidateConfigService;\n    protected abstract keyValueDiffers: KeyValueDiffers;\n    protected isGroup = false;\n    protected feedbackElementContainer?: HTMLElement;\n\n    // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n    ngOnInit(): void {\n        if ('validity' in this.elementRef.nativeElement) {\n            (this.ngControl.control as IValidateAbstractControl).__elementValidity\n                = this.elementRef.nativeElement.validity;\n        }\n        if (!this.feedbackElementContainer && this.elementRef.nativeElement.classList.contains('form-group')) {\n            this.feedbackElementContainer = this.elementRef.nativeElement;\n        }\n    }\n\n    // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n    ngAfterViewChecked(): void {\n        if (!this.ngFormValidate) {\n            return;\n        }\n\n        if (!this.isGroup && this.ngControl.dirty && this.ngControl.touched) {\n            (this.feedbackElementContainer || this.elementRef.nativeElement.parentElement)\n                ?.classList.add('was-validated');\n        }\n\n        if ( // prevent creating feedbackElement when it's not yet needed\n            !this.feedbackElement\n            && this.ngControl.valid\n        ) {\n            return;\n        }\n\n        if (!this.feedbackElement) {\n            const feedbackElement = this.createFeedBackElement();\n            if (!feedbackElement) {\n                return;\n            }\n            this.feedbackElement = feedbackElement;\n            if (this.config.inputGroupFix) {\n                this.inputGroupFix();\n            }\n\n            this.differ = this.keyValueDiffers.find({}).create();\n        }\n\n        if (!this.differ?.diff(this.ngControl.errors || {})) {\n            return;\n        }\n\n        this.errorMessages.length = 0;\n        if (this.ngControl.errors !== null) {\n            Object.entries(this.ngControl.errors || {})\n                .forEach(([error, errorValue]) => {\n                    let msg = this.config.errorMessages[error];\n                    if (\n                        typeof this.errorMessage !== 'undefined'\n                        && typeof this.errorMessage[error] !== 'undefined'\n                    ) {\n                        msg = this.errorMessage[error];\n                    }\n\n                    if (msg) {\n                        this.errorMessages.push(\n                            msg.replace('%s', this.getErrorValue(error, errorValue))\n                        );\n                    }\n                });\n        }\n\n        this.feedbackElement.textContent = this.errorMessages.join(',');\n    }\n\n    ngOnDestroy(): void {\n        if (this.feedbackElement) {\n            this.feedbackElement.remove();\n        }\n    }\n\n    protected createFeedBackElement(): HTMLElement | null {\n        const parent = this.feedbackElementContainer || this.elementRef.nativeElement.parentNode;\n        if (parent) {\n            const feedbackElement = this.document.createElement('div');\n            feedbackElement.classList.add(`invalid-${this.ngFormValidate.validateMode}`);\n\n            parent.appendChild(feedbackElement);\n\n            return feedbackElement;\n        }\n        return null;\n    }\n\n    protected inputGroupFix(): void {\n        const parent = this.elementRef.nativeElement.parentElement;\n        if (parent) {\n            if (parent.classList.contains('input-group')) {\n                this.feedbackElement?.previousElementSibling?.classList.add('rounded-right');\n            } else {\n\n                this.feedbackElement?.previousElementSibling?.classList.remove('rounded-right');\n            }\n        }\n    }\n\n    protected getErrorValue(error: string, errorValue: unknown): string {\n        if (errorValue === null) {\n            return '';\n        }\n\n        if (typeof errorValue === 'object') {\n            if (error === 'minlength' || error === 'maxlength') {\n                return (errorValue as Record<string, number>).requiredLength.toString();\n            } else if (error === 'pattern') {\n                return (errorValue as Record<string, string>).requiredPattern;\n            }\n\n            if (error in (errorValue as Record<string, unknown>)) {\n                errorValue = (errorValue as Record<string, unknown>)[error];\n            }\n        }\n\n        switch (typeof errorValue) {\n            case 'number':\n                return errorValue.toString();\n            case 'string':\n                return errorValue;\n            case 'undefined':\n            case 'boolean':\n            case 'function':\n            case 'symbol':\n            default:\n                return '';\n        }\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport {Injectable} from '@angular/core';\n\nexport type validationMode = 'feedback' | 'tooltip';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ValidateConfigService {\n    mode: validationMode = 'feedback';\n    inputGroupFix = true;\n    errorMessages: Record<string, string> = {\n        required: 'This field is required',\n        min: 'Minimum value is %s',\n        max: 'Maximum value is %s',\n        pattern: 'Please ensure the entered information adheres to this pattern: %s',\n        number: 'Please enter a valid number',\n        email: 'Please enter a valid e-mail',\n        minlength: 'Minimum length of this field is %s characters',\n        maxlength: 'Maximum length of this field is %s characters',\n        equal: 'These fields needs to be equal',\n        url: 'Please enter a valid URL (http(s)://example.com)',\n        urlMultiple: 'Please enter valid URLs (http(s)://example.com), each one in new line!',\n        host: 'Please enter valid host (example.com)',\n        hostMultiple: 'Please enter valid hosts (example.com), each one in new line!',\n        requiredGroupOr: 'At least one of these fields is required',\n        requiredGroupAnd: 'All of these fields are required',\n    };\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport {\n    ContentChildren,\n    Directive,\n    ElementRef,\n    Host,\n    Inject,\n    Input, KeyValueDiffers,\n    Optional,\n    QueryList,\n    Self,\n    SkipSelf\n} from '@angular/core';\nimport {AbstractControlDirective, FormGroupDirective, FormGroupName, NgForm} from '@angular/forms';\nimport {ValidateConfigService} from '../validate-config.service';\nimport {AbstractValidateElementDirective, VALIDATE_ELEMENT} from '../abstract-validate-element.directive';\nimport {DOCUMENT} from '@angular/common';\n\n@Directive({\n    selector: 'form:not([ngNoForm]),ng-form,[ngForm],[formGroup],[formGroupName]',\n    exportAs: 'ngFormValidate',\n    providers: [\n        {\n            provide: VALIDATE_ELEMENT,\n            useExisting: NgFormValidateDirective\n        }\n    ]\n})\nexport class NgFormValidateDirective extends AbstractValidateElementDirective {\n    @Input() validateMode: 'feedback' | 'tooltip';\n    @Input() errorMessage?: Record<string, string>;\n\n    @ContentChildren(NgFormValidateDirective, {descendants: true})\n    private children!: QueryList<NgFormValidateDirective>;\n\n    wasValidated: boolean;\n\n    protected ngFormValidate = this;\n    protected ngControl: AbstractControlDirective;\n    protected isGroup = true;\n\n    constructor(\n        @Self() @Optional() protected ngForm: NgForm,\n        @Self() @Optional() protected formGroup: FormGroupDirective,\n        @Self() @Optional() protected formGroupName: FormGroupName,\n        @SkipSelf() @Optional() protected parent: NgFormValidateDirective,\n        protected config: ValidateConfigService,\n        protected elementRef: ElementRef<HTMLFormElement>,\n        protected keyValueDiffers: KeyValueDiffers,\n        @Inject(DOCUMENT) protected document: Document\n    ) {\n        super();\n        this.validateMode = config.mode;\n        this.wasValidated = elementRef.nativeElement.classList.contains('was-validated');\n        this.feedbackElementContainer = this.elementRef.nativeElement;\n        this.ngControl = this.ngForm || this.formGroup || this.formGroupName;\n        (this.ngForm || this.formGroup)?.ngSubmit.subscribe(() => {\n            this.showValidation();\n        })\n    }\n\n    showValidation(): void {\n        this.elementRef.nativeElement.classList.add('was-validated');\n        this.wasValidated = true;\n    }\n\n    resetValidation(): void {\n        if (this.parent) {\n            this.parent.resetValidation();\n            return;\n        }\n\n        this.children.forEach((child) => {\n            const form = child.formGroupName\n                ? child.formGroupName.formDirective?.getFormGroup(child.formGroupName)\n                : (child.ngForm || child.formGroup).form;\n            form?.markAsPristine();\n        });\n\n        this.elementRef.nativeElement.querySelectorAll('.was-validated')\n            .forEach((node) => {\n                node.classList.remove('was-validated');\n            });\n        this.elementRef.nativeElement.classList.remove('was-validated');\n        this.wasValidated = false;\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport {Directive, ElementRef, Host, Inject, Input, KeyValueDiffers, Optional, Self} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {NgFormValidateDirective} from './ng-form-validate.directive';\nimport {DOCUMENT} from '@angular/common';\nimport {ValidateConfigService} from '../validate-config.service';\nimport {AbstractValidateElementDirective, VALIDATE_ELEMENT} from '../abstract-validate-element.directive';\n\n@Directive({\n    selector: '[ngModel]',\n    providers: [\n        {\n            provide: VALIDATE_ELEMENT,\n            useExisting: NgModelValidateDirective\n        }\n    ]\n})\nexport class NgModelValidateDirective extends AbstractValidateElementDirective {\n    @Input() errorMessage?: Record<string, string>;\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(\n        protected elementRef: ElementRef<HTMLElement | HTMLInputElement>,\n        protected config: ValidateConfigService,\n        protected keyValueDiffers: KeyValueDiffers,\n        @Self() protected ngControl: NgModel,\n        @Optional() protected ngFormValidate: NgFormValidateDirective,\n        @Inject(DOCUMENT) protected document: Document,\n    ) {\n        super();\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport {Directive, ElementRef, Host, Inject, Input, KeyValueDiffers, Optional, Self} from '@angular/core';\nimport {FormControlName} from '@angular/forms';\nimport {AbstractValidateElementDirective, VALIDATE_ELEMENT} from '../abstract-validate-element.directive';\nimport {ValidateConfigService} from '../validate-config.service';\nimport {NgFormValidateDirective} from '../template-forms/ng-form-validate.directive';\nimport {DOCUMENT} from '@angular/common';\n\n@Directive({\n    selector: '[formControlName]',\n    providers: [\n        {\n            provide: VALIDATE_ELEMENT,\n            useExisting: FormControlNameValidateDirective\n        }\n    ]\n})\nexport class FormControlNameValidateDirective extends AbstractValidateElementDirective {\n    @Input() errorMessage?: Record<string, string>;\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(\n        protected elementRef: ElementRef<HTMLElement | HTMLInputElement>,\n        protected config: ValidateConfigService,\n        protected keyValueDiffers: KeyValueDiffers,\n        @Self() protected ngControl: FormControlName,\n        @Optional() protected ngFormValidate: NgFormValidateDirective,\n        @Inject(DOCUMENT) protected document: Document,\n    ) {\n        super();\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport {Directive, ElementRef, Inject, Input, KeyValueDiffers, Optional, Self} from '@angular/core';\nimport {FormControlDirective} from '@angular/forms';\nimport {AbstractValidateElementDirective, VALIDATE_ELEMENT} from '../abstract-validate-element.directive';\nimport {ValidateConfigService} from '../validate-config.service';\nimport {NgFormValidateDirective} from '../template-forms/ng-form-validate.directive';\nimport {DOCUMENT} from '@angular/common';\n\n@Directive({\n    selector: '[formControl]',\n    providers: [\n        {\n            provide: VALIDATE_ELEMENT,\n            useExisting: FormControlValidateDirective\n        }\n    ]\n})\nexport class FormControlValidateDirective extends AbstractValidateElementDirective {\n    @Input() errorMessage?: Record<string, string>;\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(\n        protected elementRef: ElementRef<HTMLElement | HTMLInputElement>,\n        protected config: ValidateConfigService,\n        protected keyValueDiffers: KeyValueDiffers,\n        @Self() protected ngControl: FormControlDirective,\n        @Optional() protected ngFormValidate: NgFormValidateDirective,\n        @Inject(DOCUMENT) protected document: Document,\n    ) {\n        super();\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {AbstractControl, FormGroup, ValidationErrors, ValidatorFn, Validators as ng2Validators} from '@angular/forms';\nimport {IValidateAbstractControl} from '../abstract-validate-element.directive';\n\nexport abstract class Validators extends ng2Validators {\n    static number(control: IValidateAbstractControl): ValidationErrors | null {\n        if (control.__elementValidity && control.__elementValidity.badInput) {\n            return {\n                number: true\n            };\n        }\n        return null;\n    }\n\n    static url(mode: 'single' | 'multiple' = 'single'): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            return validateSingleOrMultiple(\n                mode,\n                control,\n                (value) => /^https?:\\/\\/.+/.test(value),\n                'url'\n            )\n        }\n    }\n\n    static host(mode: 'single' | 'multiple' = 'single'): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            return validateSingleOrMultiple(\n                mode,\n                control,\n                // eslint-disable-next-line max-len\n                (value) => /^([a-z\\u00A1-\\uFFFF0-9]|[a-z\\u00A1-\\uFFFF0-9][a-z\\u00A1-\\uFFFF0-9-]{0,61}[a-z\\u00A1-\\uFFFF0-9])(\\.([a-z\\u00A1-\\uFFFF0-9]|[a-z\\u00A1-\\uFFFF0-9][a-z\\u00A1-\\uFFFF0-9-]{0,61}[a-z\\u00A1-\\uFFFF0-9]))*$/i.test(value),\n                'host'\n            )\n        }\n    }\n\n    static equal(...controlNames: string[]): ValidatorFn {\n        return (controlGroup: AbstractControl | FormGroup): ValidationErrors | null => {\n            const isValid = getControls(controlGroup, controlNames)\n                .every((control, idx, controls) => {\n                    if (idx === 0) {\n                        return true;\n                    }\n                    const previous = controls[idx - 1];\n                    return control !== null && previous !== null && control.value === previous.value;\n                });\n\n            return isValid ? null : {\n                equal: true\n            };\n        }\n    }\n\n    static requiredGroup(mode: 'or' | 'and' = 'or', value?: unknown, ...controlNames: string[]): ValidatorFn {\n        return (controlGroup: AbstractControl | FormGroup): ValidationErrors | null => {\n            const controls = getControls(controlGroup, controlNames),\n                validateControl = (control: AbstractControl) => {\n                    return typeof value === 'undefined'\n                        ? control.value !== null && control.value.length\n                        : control.value === value;\n                };\n            const isValid = mode === 'or'\n                ? controls.some(validateControl)\n                : controls.every(validateControl);\n\n            return isValid ? null : {\n                [`requiredGroup${mode === 'or' ? 'Or' : 'And'}`]: typeof value === 'undefined' ? true : value\n            };\n        }\n    }\n}\n\nfunction validateSingleOrMultiple(\n    mode: 'single' | 'multiple',\n    control: AbstractControl,\n    validator: (value: string) => boolean,\n    validatorName: string\n): ValidationErrors | null {\n    let isValid = true;\n    if (typeof control.value === 'string' && control.value.length) {\n        if (mode === 'multiple') {\n            const rows = control.value.split(/\\r\\n|\\r|\\n/);\n            isValid = !rows.some((line) => {\n                line = line.trim();\n                return line.length && !validator(line);\n            });\n        } else {\n            isValid = validator(control.value);\n        }\n    }\n    return isValid ? null : {\n        [mode === 'single' ? validatorName : `${validatorName}Multiple`]: true\n    };\n}\n\nfunction getControls(controlGroup: AbstractControl | FormGroup, controlNames: string[]): AbstractControl[] {\n    return controlNames.length || !('controls' in controlGroup)\n        ? controlNames\n            .map((controlName) => controlGroup.get(controlName))\n            .filter((x) => x !== null) as AbstractControl[]\n        : Object.values(controlGroup.controls);\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors, Validator} from '@angular/forms';\nimport {Directive} from '@angular/core';\nimport {Validators} from './validators';\n\n\n@Directive({\n    selector: '[number]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: NumberValidatorDirective,\n            multi: true\n        }\n    ]\n})\nexport class NumberValidatorDirective implements Validator {\n    validate(control: AbstractControl): ValidationErrors | null {\n        return Validators.number(control);\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors, Validator} from '@angular/forms';\nimport {Directive, Input} from '@angular/core';\nimport {Validators} from './validators';\n\n\n@Directive({\n    selector: '[url]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: UrlValidatorDirective,\n            multi: true\n        }\n    ]\n})\nexport class UrlValidatorDirective implements Validator {\n    @Input('url') mode?: 'single' | 'multiple' | '';\n\n    validate(control: AbstractControl): ValidationErrors | null {\n        return Validators.url(this.mode || 'single')(control);\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors, Validator} from '@angular/forms';\nimport {Directive, Input} from '@angular/core';\nimport {Validators} from './validators';\n\n\n@Directive({\n    selector: '[host]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: HostValidatorDirective,\n            multi: true\n        }\n    ]\n})\nexport class HostValidatorDirective implements Validator {\n    @Input('host') mode?: 'single' | 'multiple' | '';\n\n    validate(control: AbstractControl): ValidationErrors | null {\n        return Validators.host(this.mode || 'single')(control);\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors, Validator} from '@angular/forms';\nimport {Directive, Input} from '@angular/core';\nimport {Validators} from './validators';\n\n@Directive({\n    selector: '[equal]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: EqualValidatorDirective,\n            multi: true\n        }\n    ]\n})\nexport class EqualValidatorDirective implements Validator {\n    @Input('equal') controlNames: string[] | '' = [];\n\n    validate(control: AbstractControl): ValidationErrors | null {\n        return Validators.equal(...(this.controlNames || []))(control);\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {FormGroup, NG_VALIDATORS, ValidationErrors, Validator} from '@angular/forms';\nimport {Directive, Input} from '@angular/core';\nimport {Validators} from './validators';\n\n\n@Directive({\n    selector: '[requiredGroup]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: RequiredGroupValidatorDirective,\n            multi: true\n        }\n    ]\n})\nexport class RequiredGroupValidatorDirective implements Validator {\n    @Input() requiredGroup?: { mode?: 'or' | 'and', value?: unknown, controlNames?: string[] } | '';\n\n    validate(controlGroup: FormGroup): ValidationErrors | null {\n        const options: this['requiredGroup'] = typeof this.requiredGroup === 'object' ? this.requiredGroup : {};\n\n        return Validators.requiredGroup(\n            options?.mode,\n            options?.value,\n            ...(options?.controlNames || [])\n        )(controlGroup);\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport {NgModule} from '@angular/core';\nimport {EqualValidatorDirective} from './equal-validator.directive';\nimport {HostValidatorDirective} from './host-validator.directive';\nimport {NumberValidatorDirective} from './number-validator.directive';\nimport {UrlValidatorDirective} from './url-validator.directive';\nimport {RequiredGroupValidatorDirective} from './required-group-validator.directive';\n\n@NgModule({\n    declarations: [\n        EqualValidatorDirective,\n        HostValidatorDirective,\n        NumberValidatorDirective,\n        RequiredGroupValidatorDirective,\n        UrlValidatorDirective,\n    ],\n    exports: [\n        EqualValidatorDirective,\n        HostValidatorDirective,\n        NumberValidatorDirective,\n        RequiredGroupValidatorDirective,\n        UrlValidatorDirective,\n    ]\n})\nexport class ValidatorsModule {\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport {NgModule} from '@angular/core';\nimport {NgModelValidateDirective} from './template-forms/ng-model-validate.directive';\nimport {NgFormValidateDirective} from './template-forms/ng-form-validate.directive';\nimport {FormControlNameValidateDirective} from './reactive-forms/form-control-name-validate.directive';\nimport {FormControlValidateDirective} from './reactive-forms/form-control-validate.directive';\nimport {ValidatorsModule} from './validators/validators.module';\n\n@NgModule({\n    declarations: [\n        FormControlNameValidateDirective,\n        FormControlValidateDirective,\n        NgFormValidateDirective,\n        NgModelValidateDirective\n    ],\n    imports: [\n        ValidatorsModule\n    ],\n    exports: [\n        FormControlNameValidateDirective,\n        FormControlValidateDirective,\n        NgFormValidateDirective,\n        NgModelValidateDirective,\n        ValidatorsModule\n    ]\n})\nexport class ValidateModule {\n\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nexport * from './lib/template-forms/ng-model-validate.directive';\nexport * from './lib/template-forms/ng-form-validate.directive';\nexport * from './lib/reactive-forms/form-control-name-validate.directive';\nexport * from './lib/reactive-forms/form-control-validate.directive';\nexport * from './lib/validate-config.service';\nexport * from './lib/validators/validators';\nexport * from './lib/validators/number-validator.directive';\nexport * from './lib/validators/url-validator.directive';\nexport * from './lib/validators/host-validator.directive';\nexport * from './lib/validators/equal-validator.directive';\nexport * from './lib/validators/required-group-validator.directive';\nexport * from './lib/validators/validators.module';\nexport * from './lib/abstract-validate-element.directive';\nexport * from './lib/validate.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Validators} from 'angular-bootstrap4-validate';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    nav: { id: string, title: string }[] = [];\n\n    basic = {\n        first_name: 'Mark',\n        last_name: 'Otto',\n        username: '',\n        gender: '',\n        check: false,\n        radio: ''\n    };\n\n    firstName = new FormControl('Mark', Validators.required);\n\n    reactive = new FormGroup({\n        first_name: this.firstName,\n        last_name: new FormControl('Otto'),\n        username: new FormControl('', Validators.required),\n        gender: new FormControl('', Validators.required),\n        check: new FormControl(false, Validators.requiredTrue),\n        radioGroup: new FormGroup({\n            radio: new FormControl('')\n        }, Validators.requiredGroup())\n    });\n\n    tooltip = {\n        first_name: 'Mark',\n        last_name: 'Otto',\n        username: '',\n        gender: '',\n        check: false,\n        radio: ''\n    };\n\n    customError = '';\n    customErrorReactive = new FormControl('', Validators.required);\n\n    supportedValidators = {\n        required: '',\n        pattern: 'aaa',\n        email: '123',\n        ngRequired: '',\n        ngMinlength: '1',\n        ngMaxlength: '123',\n        min: -1,\n        max: 11,\n    };\n    required = true;\n\n    additionalValidators = {\n        number: '',\n        numberReactive: new FormControl('aaa', Validators.number),\n        url: 'not an url',\n        urlReactive: new FormControl('not an url', Validators.url()),\n        urlMultiple: 'http://example.com\\nhttps://www.example.com',\n        urlMultipleReactive: new FormControl(\n            'http://example.com\\nhttps://www.example.com', Validators.url('multiple')\n        ),\n        host: 'not a host',\n        hostReactive: new FormControl('not a host', Validators.host()),\n        hostMultiple: 'example.com\\nwww.example.com',\n        hostMultipleReactive: new FormControl('example.com\\nwww.example.com', Validators.host('multiple')),\n        equal1: '1',\n        equal2: '2',\n        equalGroup: new FormGroup({\n            equal1: new FormControl('1'),\n            equal2: new FormControl('2'),\n        }, [Validators.equal('equal1', 'equal2')]),\n        required1: false,\n        required2: false,\n        required3: false,\n        required4: false,\n        requiredFormGroup: new FormGroup({\n            required1: new FormControl(false),\n            required2: new FormControl(false),\n        }, Validators.requiredGroup('or', true)),\n        requiredFormGroup2: new FormGroup({\n            required3: new FormControl(false),\n            required4: new FormControl(false),\n        }, Validators.requiredGroup('and', true)),\n        custom: 'test'\n    };\n\n    nested = {\n        first_name: 'Mark',\n        last_name: '',\n        username: '',\n        gender: ''\n    };\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-3 col-xl-2\">\n            <ul class=\"nav flex-column sticky-top mt-4\">\n                <li class=\"nav-item\" *ngFor=\"let n of nav\">\n                    <a class=\"nav-link\" href=\"#{{n.id}}\">{{n.title}}</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-md-9 col-xl-10 mb-5\">\n            <section id=\"overview\">\n                <h4 class=\"page-header\">Overview</h4>\n                <p>\n                    This plugin integrates form validation in Angular and Bootstrap 4 by extending\n                    <code>ngForm</code>, <code>ngModel</code>, <code>formGroup</code>, <code>formGroupName</code>,\n                    <code>formControl</code> and <code>formControlName</code> directives.<br/>\n                    It also provides a custom CSS file that removes default browser box-shadow from invalid form\n                    controls in validated forms.<br/>\n                    <br/>\n                    This plugin also provides a set of <a href=\"#additional-validators\">additional validators</a>\n                    and can be easily <a href=\"#i18n\">internationalized</a>.\n                </p>\n            </section>\n            <section id=\"basic-example\">\n                <h4 class=\"page-header\">Basic validation example</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        All validation errors are added automatically to all elements with <code>[(ngModel)]</code>\n                        directive that are contained in form element.<br/>\n                        Validation errors are displayed upon form submission or input change.<br/>\n                        Also, you can reset form validation state using\n                        <code>ngFormValidate.resetValidation()</code> method.\n                    </div>\n                    <div class=\"card-body\">\n                        <form #form=\"ngFormValidate\" #ngForm=\"ngForm\">\n                            <div class=\"form-row\">\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>First name</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"first_name\"\n                                           [(ngModel)]=\"basic.first_name\" required>\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>Last name</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"last_name\"\n                                           [(ngModel)]=\"basic.last_name\">\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>Username</label>\n                                    <div class=\"input-group\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\">@</span>\n                                        </div>\n                                        <input type=\"text\" class=\"form-control\" name=\"username\"\n                                               [(ngModel)]=\"basic.username\" required>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>Gender</label>\n                                    <select class=\"form-control\" name=\"gender\"\n                                            [(ngModel)]=\"basic.gender\" required>\n                                        <option></option>\n                                        <option>Male</option>\n                                        <option>Female</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-3 mb-3\">\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" name=\"checkbox\"\n                                               [(ngModel)]=\"basic.check\" id=\"invalidCheck\" required>\n                                        <label class=\"form-check-label\" for=\"invalidCheck\">\n                                            Agree to terms and conditions\n                                        </label>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-3 mb-3\" ngForm requiredGroup>\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"radio\" id=\"exampleRadios1\"\n                                               name=\"radio\" [(ngModel)]=\"basic.radio\" value=\"1\">\n                                        <label class=\"form-check-label\" for=\"exampleRadios1\">\n                                            Default radio\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"radio\" id=\"exampleRadios2\"\n                                               name=\"radio\" [(ngModel)]=\"basic.radio\" value=\"2\">\n                                        <label class=\"form-check-label\" for=\"exampleRadios2\">\n                                            Second default radio\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"alert alert-success\" *ngIf=\"ngForm.valid\">\n                                Form is valid!\n                            </div>\n                            <div class=\"d-flex\" style=\"gap: .25rem\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Submit form</button>\n                                <button type=\"button\" class=\"btn btn-secondary\"\n                                        (click)=\"form.resetValidation()\">Reset\n                                </button>\n                                <button type=\"button\" class=\"btn btn-secondary\"\n                                        (click)=\"form.showValidation()\">Show validation\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </section>\n            <section id=\"reactive-forms\">\n                <h4 class=\"page-header\">Reactive forms</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        It works the same way for reactive forms too - validation errors are added automatically to\n                        all <code>formControl</code> and <code>formControlName</code> directives.\n                    </div>\n                    <div class=\"card-body\">\n                        <form [formGroup]=\"reactive\" #reactiveForm=\"ngFormValidate\">\n                            <div class=\"form-row\">\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>First name</label>\n                                    <input type=\"text\" class=\"form-control\"\n                                           [formControl]=\"this.firstName\">\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>Last name</label>\n                                    <input type=\"text\" class=\"form-control\"\n                                           formControlName=\"last_name\">\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>Username</label>\n                                    <div class=\"input-group\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\">@</span>\n                                        </div>\n                                        <input type=\"text\" class=\"form-control\"\n                                               formControlName=\"username\">\n                                    </div>\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>Gender</label>\n                                    <select class=\"form-control\"\n                                            formControlName=\"gender\">\n                                        <option></option>\n                                        <option>Male</option>\n                                        <option>Female</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-3 mb-3\">\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"check\" id=\"react_check\">\n                                        <label class=\"form-check-label\" for=\"react_check\">\n                                            Agree to terms and conditions\n                                        </label>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-3 mb-3\" formGroupName=\"radioGroup\">\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"radio\" id=\"react_radio1\"\n                                               formControlName=\"radio\" value=\"1\">\n                                        <label class=\"form-check-label\" for=\"react_radio1\">\n                                            Default radio\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"radio\" id=\"react_radio2\"\n                                               formControlName=\"radio\" value=\"2\">\n                                        <label class=\"form-check-label\" for=\"react_radio2\">\n                                            Second default radio\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"alert alert-success\" *ngIf=\"reactive.valid\">\n                                Form is valid!\n                            </div>\n                            <div class=\"d-flex\" style=\"gap: .25rem\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Submit form</button>\n                                <button type=\"button\" class=\"btn btn-secondary\"\n                                        (click)=\"reactiveForm.resetValidation()\">Reset\n                                </button>\n                                <button type=\"button\" class=\"btn btn-secondary\"\n                                        (click)=\"reactiveForm.showValidation()\">Show validation\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </section>\n            <section id=\"tooltips\">\n                <h4 class=\"page-header\">Tooltips</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        You can use <code>'invalid-tooltip'</code> instead of <code>'invalid-feedback'</code>\n                        by using the <code>validateMode</code> directive on form element.<br/>\n                        Default validateMode can be changed in <code>ValidateConfigService</code>.\n                    </div>\n                    <div class=\"card-body\">\n                        <form name=\"tooltipForm\" validateMode=\"tooltip\">\n                            <div class=\"form-row\">\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>First name</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"tooltip_first_name\"\n                                           [(ngModel)]=\"tooltip.first_name\" required>\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>Last name</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"tooltip_last_name\"\n                                           [(ngModel)]=\"tooltip.last_name\" required>\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>Username</label>\n                                    <div class=\"input-group\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\">@</span>\n                                        </div>\n                                        <input type=\"text\" class=\"form-control\" name=\"tooltip_username\"\n                                               [(ngModel)]=\"tooltip.username\" required>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <label>Gender</label>\n                                    <select class=\"form-control\" name=\"tooltip_gender\"\n                                            [(ngModel)]=\"tooltip.gender\" required>\n                                        <option></option>\n                                        <option>Male</option>\n                                        <option>Female</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-3 mb-3\">\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" name=\"tooltip_check\"\n                                               [(ngModel)]=\"tooltip.check\"\n                                               id=\"invalidCheck2\" required>\n                                        <label class=\"form-check-label\" for=\"invalidCheck2\">\n                                            Agree to terms and conditions\n                                        </label>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-3 mb-3\">\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"radio\" id=\"exampleRadios3\"\n                                               name=\"ex2radio\" [(ngModel)]=\"tooltip.radio\" value=\"1\">\n                                        <label class=\"form-check-label\" for=\"exampleRadios3\">\n                                            Default radio\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"radio\" id=\"exampleRadios4\"\n                                               name=\"ex2radio\" [(ngModel)]=\"tooltip.radio\" value=\"2\" required>\n                                        <label class=\"form-check-label\" for=\"exampleRadios4\">\n                                            Second default radio\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                            <button class=\"btn btn-primary\" type=\"submit\">Submit form</button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n            <section id=\"custom-message\">\n                <h4 class=\"page-header\">Custom message</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        You can change default error message by using\n                        <code>[errorMessage]=\"{{'{'}}validatorName: 'validator message'}\"</code> input.<br/>\n                        E.g. <code>[errorMessage]=\"{{'{'}}required: 'custom text'}\"</code>\n                        or <code>[errorMessage]=\"{{'{'}}min: 'custom text'}\"</code>\n                    </div>\n                    <div class=\"card-body\">\n                        <form>\n                            <div class=\"form-row\">\n                                <div class=\"form-group col-md-6\">\n                                    <label>Required template-driven input with custom message</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"custom_error\"\n                                           [(ngModel)]=\"customError\" required\n                                           [errorMessage]=\"{required: 'Custom text'}\"/>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label>Required reactive input with custom message</label>\n                                    <input type=\"text\" class=\"form-control\" [formControl]=\"customErrorReactive\"\n                                           [errorMessage]=\"{required: 'Custom text'}\"/>\n                                </div>\n                            </div>\n                            <button class=\"btn btn-primary\" type=\"submit\">Submit form</button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n            <section id=\"supported-validators\">\n                <h4 class=\"page-header\">Supported validators</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        All validators builtin into Angular are supported.\n                    </div>\n                    <div class=\"card-body\">\n                        <form>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>required</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"supported_required\"\n                                           [(ngModel)]=\"supportedValidators.required\" required/>\n                                </div>\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>pattern</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"supported_pattern\"\n                                           [(ngModel)]=\"supportedValidators.pattern\"\n                                           pattern=\"^[A-Z]+$\"/>\n                                </div>\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>email</label>\n                                    <input type=\"email\" class=\"form-control\" name=\"supported_email\"\n                                           [(ngModel)]=\"supportedValidators.email\" email/>\n                                </div>\n                            </div>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>\n                                        dynamic required\n                                        <a href=\"javascript:\" (click)=\"required=!required\">toggle</a>\n                                    </label>\n                                    <input type=\"number\" class=\"form-control\" name=\"supported_dyn_required\"\n                                           [(ngModel)]=\"supportedValidators.ngRequired\"\n                                           [required]=\"required\"/>\n                                </div>\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>maxlength</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"supported_maxlength\"\n                                           [(ngModel)]=\"supportedValidators.ngMaxlength\"\n                                           [maxlength]=\"2\"/>\n                                </div>\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>minlength</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"supported_minlength\"\n                                           [(ngModel)]=\"supportedValidators.ngMinlength\"\n                                           [minlength]=\"10\"/>\n                                </div>\n                            </div>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>min</label>\n                                    <input type=\"number\" class=\"form-control\" name=\"supported_min\"\n                                           [(ngModel)]=\"supportedValidators.min\" min=\"0\" number/>\n                                </div>\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>max</label>\n                                    <input type=\"number\" class=\"form-control\" name=\"supported_max\"\n                                           [(ngModel)]=\"supportedValidators.max\" max=\"10\" number/>\n                                </div>\n                            </div>\n                            <button class=\"btn btn-primary\" type=\"submit\">Submit form</button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n            <section id=\"additional-validators\">\n                <h4 class=\"page-header\">Additional validators</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        This plugin provides a set of custom validators which are available from\n                        <code>Validators</code> class which extends Angular <code>Validators</code> class.<br/>\n                        All of them are available as directives for template-driven forms too.\n                    </div>\n                    <div class=\"card-body\">\n                        <form>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>number</label>\n                                    <input type=\"number\" class=\"form-control\" name=\"additional_number\"\n                                           [(ngModel)]=\"additionalValidators.number\" number/>\n                                </div>\n                                <div class=\"col-md-4 mb-3\">\n                                    <label>number reactive</label>\n                                    <input type=\"number\" class=\"form-control\"\n                                           [formControl]=\"additionalValidators.numberReactive\"/>\n                                </div>\n                            </div>\n                            <div class=\"alert alert-info\">\n                                <code>input[type=\"number\"]</code> has a\n                                <a href=\"https://github.com/angular/angular/issues/2962\">known problem</a> in Angular\n                                that wrongly marks its model value as valid when bad input is provided.<br/>\n                                <code>Validators.number</code> validator\n                                (or <code>number</code> validator directive for template-driven forms), checks\n                                <code>element.validity.badInput</code> state to display proper validation error.<br/>\n                                Please note that because of Angular setting value to <code>null</code> this doesn't\n                                work for initial validation.\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-row\">\n                                        <div class=\"col-md-6 mb-3\">\n                                            <label>url</label>\n                                            <input type=\"text\" class=\"form-control\" name=\"additional_url\"\n                                                   [(ngModel)]=\"additionalValidators.url\" url/>\n                                        </div>\n                                        <div class=\"col-md-6 mb-3\">\n                                            <label>Validators.url()</label>\n                                            <input type=\"text\" class=\"form-control\"\n                                                   [formControl]=\"additionalValidators.urlReactive\"/>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-row\">\n                                        <div class=\"col-md-6 mb-3\">\n                                            <label>url=\"multiple\"</label>\n                                            <textarea class=\"form-control\" name=\"additional_url_multiple\"\n                                                      [(ngModel)]=\"additionalValidators.urlMultiple\"\n                                                      url=\"multiple\"></textarea>\n                                        </div>\n                                        <div class=\"col-md-6 mb-3\">\n                                            <label>Validators.url('multiple')</label>\n                                            <textarea class=\"form-control\"\n                                                      [formControl]=\"additionalValidators.urlMultipleReactive\"\n                                            ></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-row\">\n                                        <div class=\"col-md-6 mb-3\">\n                                            <label>host</label>\n                                            <input type=\"text\" class=\"form-control\" name=\"additional_host\"\n                                                   [(ngModel)]=\"additionalValidators.host\" host/>\n                                        </div>\n                                        <div class=\"col-md-6 mb-3\">\n                                            <label>Validators.host()</label>\n                                            <input type=\"text\" class=\"form-control\"\n                                                   [formControl]=\"additionalValidators.hostReactive\"/>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-row\">\n                                        <div class=\"col-md-6 mb-3\">\n                                            <label>host=\"multiple\"</label>\n                                            <textarea class=\"form-control\" name=\"additional_host_multiple\"\n                                                      [(ngModel)]=\"additionalValidators.hostMultiple\"\n                                                      host=\"multiple\"></textarea>\n                                        </div>\n                                        <div class=\"col-md-6 mb-3\">\n                                            <label>Validators.host('multiple')</label>\n                                            <textarea class=\"form-control\"\n                                                      [formControl]=\"additionalValidators.hostMultipleReactive\"\n                                            ></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <h5 class=\"page-header pt-3\">ngForm / FormGroup validators</h5>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-row mb-3\" ngForm equal>\n                                        <div class=\"col-md-6\">\n                                            <label>equal=\"controlNames: string[]\"</label>\n                                            <input type=\"text\" class=\"form-control\" name=\"additional_equal\"\n                                                   [(ngModel)]=\"additionalValidators.equal1\"/>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                            <label>&nbsp;</label>\n                                            <input type=\"text\" class=\"form-control\" name=\"additional_equal2\"\n                                                   [(ngModel)]=\"additionalValidators.equal2\"/>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-row mb-3\" [formGroup]=\"additionalValidators.equalGroup\">\n                                        <div class=\"col-md-6\">\n                                            <label>Validators.equal(...controlNames: string[])</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"equal1\"/>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                            <label>&nbsp;</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"equal2\"/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mb-3\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-6\" ngForm [requiredGroup]=\"{value: true}\">\n                                            <label>[requiredGroup]=\"{{'{'}}value: true}\"</label>\n                                            <div class=\"form-check\">\n                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                       name=\"additional_required1\"\n                                                       [(ngModel)]=\"additionalValidators.required1\"\n                                                       id=\"additional_required1\">\n                                                <label class=\"form-check-label\" for=\"additional_required1\">\n                                                    checkbox 1\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check\">\n                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                       name=\"additional_required2\"\n                                                       [(ngModel)]=\"additionalValidators.required2\"\n                                                       id=\"additional_required2\">\n                                                <label class=\"form-check-label\" for=\"additional_required2\">\n                                                    checkbox 2\n                                                </label>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-6\" ngForm [requiredGroup]=\"{value: true, mode: 'and'}\">\n                                            <label>[requiredGroup]=\"{{'{'}}value: true}\"</label>\n                                            <div class=\"form-check\">\n                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                       name=\"additional_required11\"\n                                                       [(ngModel)]=\"additionalValidators.required3\"\n                                                       id=\"additional_required11\">\n                                                <label class=\"form-check-label\" for=\"additional_required11\">\n                                                    checkbox 1\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check\">\n                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                       name=\"additional_required21\"\n                                                       [(ngModel)]=\"additionalValidators.required4\"\n                                                       id=\"additional_required21\">\n                                                <label class=\"form-check-label\" for=\"additional_required21\">\n                                                    checkbox 2\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-6\" [formGroup]=\"additionalValidators.requiredFormGroup\">\n                                            <label>Validators.requiredGroup('or', true,\n                                                ...controlNames: string[])</label>\n                                            <div class=\"form-check\">\n                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                       formControlName=\"required1\" id=\"additional_required3\">\n                                                <label class=\"form-check-label\" for=\"additional_required3\">\n                                                    checkbox 1\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check\">\n                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                       formControlName=\"required2\" id=\"additional_required4\">\n                                                <label class=\"form-check-label\" for=\"additional_required4\">\n                                                    checkbox 2\n                                                </label>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-6\" [formGroup]=\"additionalValidators.requiredFormGroup2\">\n                                            <label>Validators.requiredGroup('and', true,\n                                                ...controlNames: string[])</label>\n                                            <div class=\"form-check\">\n                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                       formControlName=\"required3\" id=\"additional_required31\">\n                                                <label class=\"form-check-label\" for=\"additional_required31\">\n                                                    checkbox 1\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check\">\n                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                       formControlName=\"required4\" id=\"additional_required41\">\n                                                <label class=\"form-check-label\" for=\"additional_required41\">\n                                                    checkbox 2\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"alert alert-info\">\n                                When you pass no controlNames to ngForm / FormGroup validators\n                                then all of it child controls will be validated.\n                            </div>\n\n                            <button class=\"btn btn-primary\" type=\"submit\">Submit form</button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n            <section id=\"i18n\">\n                <h4 class=\"page-header\">i18n</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        All default error messages can be configured in <code>ValidateConfigService</code>.<br/>\n                    </div>\n                </div>\n            </section>\n            <section id=\"input-group-fix\">\n                <h4 class=\"page-header\">Input group fix</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        This plugin supports a\n                        <a href=\"https://getbootstrap.com/docs/4.5/components/forms/#input-group-validation-workaround\"\n                           rel=\"nofollow\" target=\"_blank\">input group validation workaround</a>\n                        by adding <code>rounded-right</code> css class to the last non-feedback child element\n                        of input-group.<br/>\n                        You can disable this fix in <code>ValidateConfigService</code>\n                        by setting <code>inputGroupFix</code> to <code>false</code>.\n                    </div>\n                    <div class=\"card-body was-validated\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <h6>Without fix</h6>\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\">@</span>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control\" required/>\n                                    <div class=\"invalid-feedback\"></div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <h6>With fix</h6>\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\">@</span>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control rounded-right\" required/>\n                                    <div class=\"invalid-feedback\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section id=\"custom-controls\">\n                <h4 class=\"page-header\">Custom controls support</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        Custom form controls (eg. Angular components) are supported via provided CSS\n                        file that utilizes Angular .ng-invalid/.ng-valid classes.\n                    </div>\n                    <div class=\"card-body\">\n                        <form class=\"was-validated\">\n                            <!-- feedback -->\n                            <div class=\"form-row mb-3\">\n                                <div class=\"col\">\n                                    <div class=\"custom-select ng-invalid\"></div>\n                                    <div class=\"invalid-feedback\">Invalid feedback</div>\n                                    <div class=\"valid-feedback\">Valid feedback</div>\n                                </div>\n                                <div class=\"col\">\n                                    <div class=\"custom-select ng-valid\"></div>\n                                    <div class=\"invalid-feedback\">Invalid feedback</div>\n                                    <div class=\"valid-feedback\">Valid feedback</div>\n                                </div>\n                                <div class=\"col\">\n                                    <div class=\"ng-invalid\">\n                                        <div class=\"custom-select\"></div>\n                                    </div>\n                                    <div class=\"invalid-feedback\">Invalid feedback</div>\n                                    <div class=\"valid-feedback\">Valid feedback</div>\n                                </div>\n                                <div class=\"col\">\n                                    <div class=\"ng-valid\">\n                                        <div class=\"custom-select\"></div>\n                                    </div>\n                                    <div class=\"invalid-feedback\">Invalid feedback</div>\n                                    <div class=\"valid-feedback\">Valid feedback</div>\n                                </div>\n                            </div>\n                            <!-- tooltip -->\n                            <div class=\"form-row mb-4\">\n                                <div class=\"col\">\n                                    <div class=\"form-control ng-invalid\"></div>\n                                    <div class=\"invalid-tooltip\">Invalid feedback</div>\n                                </div>\n                                <div class=\"col\">\n                                    <div class=\"form-control ng-valid\"></div>\n                                    <div class=\"invalid-tooltip\">Invalid feedback</div>\n                                    <div class=\"valid-tooltip\">Valid feedback</div>\n                                </div>\n                                <div class=\"col\">\n                                    <div class=\"ng-invalid\">\n                                        <div class=\"form-control\"></div>\n                                    </div>\n                                    <div class=\"invalid-tooltip\">Invalid feedback</div>\n                                    <div class=\"valid-tooltip\">Valid feedback</div>\n                                </div>\n                                <div class=\"col\">\n                                    <div class=\"ng-valid\">\n                                        <div class=\"form-control\"></div>\n                                    </div>\n                                    <div class=\"invalid-tooltip\">Invalid feedback</div>\n                                    <div class=\"valid-tooltip\">Valid feedback</div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </section>\n            <section id=\"ng-form\">\n                <h4 class=\"page-header\">ng-form support</h4>\n                <div class=\"card\">\n                    <div class=\"card-header\">Support for ng-form component (nested forms)</div>\n                    <div class=\"card-body\">\n                        <form>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-6 mb-3\">\n                                    <label>First name</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"ngf_first_name\"\n                                           [(ngModel)]=\"nested.first_name\" required>\n                                </div>\n                                <div class=\"col-md-6 mb-3\">\n                                    <label>Last name</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"ngf_last_name\"\n                                           [(ngModel)]=\"nested.last_name\" required>\n                                </div>\n                            </div>\n                            <ng-form name=\"sub\" #sub=\"ngFormValidate\">\n                                <div class=\"form-row\">\n                                    <div class=\"col-md-6 mb-3\">\n                                        <label>Username</label>\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\">@</span>\n                                            </div>\n                                            <input type=\"text\" class=\"form-control\" name=\"ngf_username\"\n                                                   [(ngModel)]=\"nested.username\"\n                                                   required>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6 mb-3\">\n                                        <ng-form name=\"sub2\" #form2=\"ngFormValidate\">\n                                            <label>Gender</label>\n                                            <select class=\"form-control\" name=\"ngf_gender\"\n                                                    [(ngModel)]=\"nested.gender\" required>\n                                                <option></option>\n                                                <option>Male</option>\n                                                <option>Female</option>\n                                            </select>\n                                            <button class=\"btn btn-primary mt-2 mr-2\" type=\"button\"\n                                                    (click)=\"form2.showValidation()\">show validation\n                                            </button>\n                                            <button class=\"btn btn-primary mt-2\" type=\"button\"\n                                                    (click)=\"form2.resetValidation()\">reset validation\n                                            </button>\n                                        </ng-form>\n                                    </div>\n                                </div>\n                                <button class=\"btn btn-primary mr-2\" type=\"button\" (click)=\"sub.showValidation()\">show\n                                    validation\n                                </button>\n                                <button class=\"btn btn-primary\" type=\"button\" (click)=\"sub.resetValidation()\">reset\n                                    validation\n                                </button>\n                            </ng-form>\n                            <button class=\"btn btn-primary mt-2\" type=\"submit\">Submit form</button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        </div>\n    </div>\n</div>\n<!--\nTODO nested forms - reactive\n-->\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SectionDirective} from './section.directive';\nimport {ValidateModule} from 'angular-bootstrap4-validate';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SectionDirective\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ValidateModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {Directive, ElementRef, Host, Input, OnInit} from '@angular/core';\nimport {AppComponent} from './app.component';\n\n@Directive({\n    selector: 'section',\n})\nexport class SectionDirective implements OnInit {\n    @Input() id = '';\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        @Host() private app: AppComponent\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.app.nav.push({\n            id: this.id,\n            title: this.elementRef.nativeElement.querySelector('.page-header')?.textContent?.trim() || this.id\n        });\n    }\n}\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","/*\n * Angular validation plugin for  Bootstrap 4\n *  Copyright (c) 2019-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    // eslint-disable-next-line no-console\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 577;\nmodule.exports = webpackEmptyAsyncContext;"],"sourceRoot":"webpack:///"}