angular.module("validate",[]),function(){"use strict";function e(e){return{restrict:"E",require:"form",link(t,a,i,n){"novalidate"in i||(n.validationMode=i.validateMode||e.mode,a[0].addEventListener("submit",function(){a.addClass("was-validated")}),n.resetValidation=function(){n.$setPristine(),angular.element(a[0].querySelectorAll(".was-validated")).removeClass("was-validated"),a.removeClass("was-validated")})}}}e.$inject=["validate"],angular.module("validate").directive("form",e)}(),function(){"use strict";function e(e,t){return{restrict:"A",require:["ngModel","?^form"],link(a,i,n,r){const l=r[0],s=r[1];if(null===s||s.$$element[0].hasAttribute("novalidate"))return;let u=null;a.$watch(function(){return l.$error},function(a){null===u&&(u=angular.element('<div class="invalid-'+s.validationMode+'"></div>'),i.parent().append(u),i.parent().hasClass("input-group")&&angular.element(u[0].previousElementSibling).addClass("input-group-fix"));const r=[];for(let l in a)if(a.hasOwnProperty(l)){let a=n[l+"ErrorMsg"]||e.errorMessages[l];if(angular.isObject(a)&&(a="INPUT"===i[0].tagName?a.input:a.textarea),angular.isDefined(a)){let e=n[l]||n[n.$normalize("ng-"+l)];try{e=t(e)}catch(e){}r.push(a.replace("%s",e))}}u.html(r.join(", "))},!0),a.$watch(function(){return l.$dirty},function(e){e&&("radio"===n.type?l.$$parentForm.$getControls().forEach(e=>{e.$name===l.$name&&e.$$element.parent().addClass("was-validated")}):i.parent().addClass("was-validated"))}),i[0].addEventListener("invalid",function(e){e.preventDefault(),s.$$element.addClass("was-validated")}),a.$on("$destroy",function(){u.remove()})}}}e.$inject=["validate","$parse"],angular.module("validate").directive("ngModel",e)}(),function(){"use strict";function e(e){function t(e){const t=e[0].compile,a=e[0].name.replace("ng","").toLowerCase();return e[0].compile=function(){const e=t.apply(this,arguments);return function(t,i,n,r){e.apply(this,arguments);const l=r.$validators[a];r.$validators[a]=function(){const e=l.apply(this,arguments);return i[0].setCustomValidity(e?"":" "),e}}},e}t.$inject=["$delegate"],e.decorator("ngPatternDirective",t),e.decorator("ngMinlengthDirective",t),e.decorator("ngMaxlengthDirective",t)}e.$inject=["$provide"],angular.module("validate").config(e)}(),function(){"use strict";angular.module("validate").provider("validate",class{constructor(){this.mode="feedback",this.inputGroupFix=!0,this.errorMessages={required:"This field is required",min:"Minimum value is %s",max:"Maximum value is %s",pattern:"Please ensure the entered information adheres to this pattern: %s",number:"Please enter a valid number",email:"Please enter a valid e-mail",minlength:"Minimum length of this field is %s characters",maxlength:"Maximum length of this field is %s characters",validateEqual:"These fields needs to be equal",validateUrl:{input:"Please enter a valid URL (http(s)://example.com)",textarea:"Please enter valid URLs (http(s)://example.com), each one in new line!"},validateHost:{input:"Please enter valid host (example.com)",textarea:"Please enter valid hosts (example.com), each one in new line!"}}}$get(){return this}})}(),function(){"use strict";angular.module("validate").directive("validateCustom",function(){return{restrict:"A",require:{ngModel:"ngModel"},bindToController:{validateCustom:"&"},controller:["$element",function(e){this.$onInit=(()=>{this.ngModel.$validators.validateCustom=(t=>{let a=this.validateCustom({value:t});return e[0].setCustomValidity(a?"":" "),a})})}]}})}(),function(){"use strict";function e(e){return{restrict:"A",require:"ngModel",link(t,a,i,n){const r=e(i.validateEqual);n.$validators.validateEqual=function(e){let i=e==r(t);return a[0].setCustomValidity(i?"":" "),i},t.$watch(function(){return r(t)},function(){n.$validate()})}}}e.$inject=["$parse"],angular.module("validate").directive("validateEqual",e)}(),function(){"use strict";angular.module("validate").directive("validateHost",function(){function e(e){return/^([a-z\u00A1-\uFFFF0-9]|[a-z\u00A1-\uFFFF0-9][a-z\u00A1-\uFFFF0-9-]{0,61}[a-z\u00A1-\uFFFF0-9])(\.([a-z\u00A1-\uFFFF0-9]|[a-z\u00A1-\uFFFF0-9][a-z\u00A1-\uFFFF0-9-]{0,61}[a-z\u00A1-\uFFFF0-9]))*$/i.test(e)}return{restrict:"A",require:"ngModel",link(t,a,i,n){n.$validators.validateHost=function(t){let i=!0;if(angular.isDefined(t)&&""!==t)if("TEXTAREA"===a[0].tagName){const a=t.split(/\r\n|\r|\n/);for(let t=0;t<a.length;t++){const n=a[t].trim();if(""!==n&&!e(n)){i=!1;break}}}else i=e(t);return a[0].setCustomValidity(i?"":" "),i}}}})}(),function(){"use strict";angular.module("validate").directive("validateUrl",function(){function e(e){return/^https?:\/\/.+/.test(e)}return{restrict:"A",require:"ngModel",link(t,a,i,n){n.$validators.validateUrl=function(t){let i=!0;if(angular.isDefined(t)&&""!==t)if("TEXTAREA"===a[0].tagName){const a=t.split(/\r\n|\r|\n/);for(let t=0;t<a.length;t++){const n=a[t].trim();if(""!==n&&!e(n)){i=!1;break}}}else i=e(t);return a[0].setCustomValidity(i?"":" "),i}}}})}();
//# sourceMappingURL=angularjs-bootstrap4-validate.min.js.map
